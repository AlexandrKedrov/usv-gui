FROM ubuntu:bionic

RUN  apt-get update \
  && apt-get install -y git make

RUN apt-get install -y \
    autoconf \
    automake \
    autopoint \
    bash \
    bison \
    bzip2 \
    flex \
    g++ \
    g++-multilib \
    gettext \
    git \
    gperf \
    intltool \
    libc6-dev-i386 \
    libgdk-pixbuf2.0-dev \
    libltdl-dev \
    libssl-dev \
    libtool-bin \
    libxml-parser-perl \
    lzip \
    make \
    openssl \
    p7zip-full \
    patch \
    perl \
    pkg-config \
    python \
    python-mako \
    ruby \
    sed \
    unzip \
    wget


RUN mkdir /cross && cd /cross && git clone https://github.com/mxe/mxe.git && cd mxe

WORKDIR /cross/mxe

RUN make MXE_TARGETS=x86_64-w64-mingw32.static MXE_PLUGIN_DIRS=plugins/gcc8 qtbase  -j16 JOBS=16
RUN mkdir /cross/build

# Build GeographicLib

ENV PATH="/cross/mxe/usr/bin:${PATH}"

WORKDIR /cross/build
RUN git clone git://git.code.sourceforge.net/p/geographiclib/code geographiclib
WORKDIR /cross/build/geographiclib
RUN x86_64-w64-mingw32.static-cmake -DGEOGRAPHICLIB_LIB_TYPE=STATIC . && make -j16 && make install

WORKDIR /app/build

ENTRYPOINT x86_64-w64-mingw32.static-cmake /app/src/src -DCMAKE_TOOLCHAIN_FILE=/cross/mxe/usr/x86_64-w64-mingw32.static/share/cmake/mxe-conf.cmake -DCMAKE_BUILD_TYPE:String=Release && make -j16 && cp *.exe /app/res/

#docker run  --mount type=bind,source=$(pwd)/result/,target=/app/res --mount type=bind,source=$(pwd)/../,target=/app/src simple-qt-build
