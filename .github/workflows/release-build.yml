name: build

on: push

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Install deps
      run: |
        sudo apt-get update && sudo apt-get install xorg-dev libglu1-mesa-dev libgeographic-dev

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE

    - name: Tag name
      id: tag_name
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

    - name: Run CPack
      working-directory: ${{runner.workspace}}/build
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cpack .
        mv ./src/package/usv-gui-linux.deb ./usv-gui-${{ steps.tag_name.outputs.SOURCE_TAG }}.deb

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ${{runner.workspace}}/build/*.deb

  build-win:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - uses: ilammy/msvc-dev-cmd@v1
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Configure
        run: |
          cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release

      - uses: ilammy/msvc-dev-cmd@v1
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Build
        shell: bash
        run: |
          cmake --build build --config Release
          echo `pwd`/build/src
          ls -l ./build/src

      - name: Tag name
        id: tag_name
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Zip executable
        working-directory: ${{runner.workspace}}/build
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          zip --junk-paths usv-gui-${{ steps.tag_name.outputs.SOURCE_TAG }}.zip ./src/usv-gui.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{runner.workspace}}/build/*.zip